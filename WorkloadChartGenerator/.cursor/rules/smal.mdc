---
description: 
globs: 
alwaysApply: true
---
Соблюдай правила:
0) соблюдай ооп
1) Разделяй код на 2–3 логическихие части (например, «данные», «логика», «взаимодействие с пользователем»).
2) Не «множь» файлы без необходимости: когда файл превышает ~500–700 строк и его сложно читать, подумай о выделении части кода в отдельный модуль.
3) Все «строковые» ключи, пути и параметры храни в одном файле (settings.py).
4) делай requirements
5) Понятные имена и комментарии переменных:Имена переменных без сокращений: user_profile вместо usr_prof, file_path вместо fp.
6) К каждой переменной (особенно неочевидной) добавляй короткий комментарий «зачем» она нужна.
7) Логирование вместо print(). Используй стандартный модуль logging для сообщений об ошибках и важном статусе, а не print(). Настрой базовый конфиг логгера в одном месте (например, в main.py или settings.py).
8) Базовое соблюдение PEP 8
9) К классам, методам и функциям обязательно писать англоязычные docstring, в которых:
 - кратко описано, что делает эта сущность; Для маленьких (менее 20 строк кода) достаточно предложения (где-то 10-15 слов), а для больших пара тройка предложений (30-50 слов)
 - перечислены аргументы (имя – тип – зачем нужен);
 - возвращаемое значение (имя – тип – зачем нужен).


 при внесении изменений проверяй, что в других частях проекта всё ещё работает.
Перед созданием новой функции/класса подумай, как она впишется в существующие модули,  Если ты что-то решил, настаивай на своем, приводя аргументы почему ты прав. 
Рассматривай почему ты можешь быть не прав в решениях перед действием.
Сосавляй планы действий, а потом следуй им. 
Также запрещаю использовать сокращения в названиях. Английский использовать простой, просторечный.